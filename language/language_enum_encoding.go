// Code generated by go-enum-encoding; DO NOT EDIT.

package language

import "errors"

var ErrUnknownLanguage = errors.New("unknown Language")

func (s *Language) UnmarshalText(text []byte) error {
	switch string(text) {
	case "":
		*s = Unknown
	case "ab":
		*s = Abkhaz
	case "aa":
		*s = Afar
	case "af":
		*s = Afrikaans
	case "ak":
		*s = Akan
	case "sq":
		*s = Albanian
	case "am":
		*s = Amharic
	case "ar":
		*s = Arabic
	case "an":
		*s = Aragonese
	case "hy":
		*s = Armenian
	case "as":
		*s = Assamese
	case "av":
		*s = Avaric
	case "ae":
		*s = Avestan
	case "ay":
		*s = Aymara
	case "az":
		*s = Azerbaijani
	case "bm":
		*s = Bambara
	case "ba":
		*s = Bashkir
	case "eu":
		*s = Basque
	case "be":
		*s = Belarusian
	case "bn":
		*s = Bengali
	case "bh":
		*s = Bihari
	case "bi":
		*s = Bislama
	case "bs":
		*s = Bosnian
	case "br":
		*s = Breton
	case "bg":
		*s = Bulgarian
	case "my":
		*s = Burmese
	case "ca":
		*s = Catalan
	case "ch":
		*s = Chamorro
	case "ce":
		*s = Chechen
	case "ny":
		*s = Chichewa
	case "zh":
		*s = Chinese
	case "zh_Hant":
		*s = ChineseTraditional
	case "cv":
		*s = Chuvash
	case "kw":
		*s = Cornish
	case "co":
		*s = Corsican
	case "cr":
		*s = Cree
	case "hr":
		*s = Croatian
	case "cs":
		*s = Czech
	case "da":
		*s = Danish
	case "dv":
		*s = Divehi
	case "nl":
		*s = Dutch
	case "dz":
		*s = Dzongkha
	case "en":
		*s = English
	case "eo":
		*s = Esperanto
	case "et":
		*s = Estonian
	case "ee":
		*s = Ewe
	case "fo":
		*s = Faroese
	case "fj":
		*s = Fijian
	case "fi":
		*s = Finnish
	case "fr":
		*s = French
	case "ff":
		*s = Fula
	case "gl":
		*s = Galician
	case "lg":
		*s = Ganda
	case "ka":
		*s = Georgian
	case "de":
		*s = German
	case "el":
		*s = Greek
	case "gn":
		*s = Guaraní
	case "gu":
		*s = Gujarati
	case "ht":
		*s = Haitian
	case "ha":
		*s = Hausa
	case "he":
		*s = Hebrew
	case "hz":
		*s = Herero
	case "hi":
		*s = Hindi
	case "ho":
		*s = Hiri
	case "hu":
		*s = Hungarian
	case "is":
		*s = Icelandic
	case "io":
		*s = Ido
	case "ig":
		*s = Igbo
	case "id":
		*s = Indonesian
	case "ia":
		*s = Interlingua
	case "ie":
		*s = Interlingue
	case "iu":
		*s = Inuktitut
	case "ik":
		*s = Inupiaq
	case "ga":
		*s = Irish
	case "it":
		*s = Italian
	case "ja":
		*s = Japanese
	case "jv":
		*s = Javanese
	case "kl":
		*s = Kalaallisut
	case "kn":
		*s = Kannada
	case "kr":
		*s = Kanuri
	case "ks":
		*s = Kashmiri
	case "kk":
		*s = Kazakh
	case "km":
		*s = Khmer
	case "ki":
		*s = Kikuyu
	case "rw":
		*s = Kinyarwanda
	case "rn":
		*s = Kirundi
	case "kv":
		*s = Komi
	case "kg":
		*s = Kongo
	case "ko":
		*s = Korean
	case "ku":
		*s = Kurdish
	case "kj":
		*s = Kwanyama
	case "ky":
		*s = Kyrgyz
	case "lo":
		*s = Lao
	case "la":
		*s = Latin
	case "lv":
		*s = Latvian
	case "li":
		*s = Limburgish
	case "ln":
		*s = Lingala
	case "lt":
		*s = Lithuanian
	case "lu":
		*s = Luba
	case "lb":
		*s = Luxembourgish
	case "mk":
		*s = Macedonian
	case "mg":
		*s = Malagasy
	case "ms":
		*s = Malay
	case "ml":
		*s = Malayalam
	case "mt":
		*s = Maltese
	case "gv":
		*s = Manx
	case "mi":
		*s = Māori
	case "mr":
		*s = Marathi
	case "mh":
		*s = Marshallese
	case "mn":
		*s = Mongolian
	case "na":
		*s = Nauru
	case "nv":
		*s = Navajo
	case "ng":
		*s = Ndonga
	case "ne":
		*s = Nepali
	case "se":
		*s = Northern
	case "nd":
		*s = NorthernNdebele
	case "no":
		*s = Norwegian
	case "nb":
		*s = NorwegianBokmal
	case "nn":
		*s = NorwegianNynorsk
	case "ii":
		*s = Nuosu
	case "oc":
		*s = Occitan
	case "oj":
		*s = Ojibwe
	case "cu":
		*s = Old
	case "or":
		*s = Oriya
	case "om":
		*s = Oromo
	case "os":
		*s = Ossetian
	case "pi":
		*s = Pāli
	case "pa":
		*s = Panjabi
	case "ps":
		*s = Pashto
	case "fa":
		*s = Persian
	case "pl":
		*s = Polish
	case "pt":
		*s = Portuguese
	case "qu":
		*s = Quechua
	case "ro":
		*s = Romanian
	case "rm":
		*s = Romansh
	case "ru":
		*s = Russian
	case "sm":
		*s = Samoan
	case "sg":
		*s = Sango
	case "sa":
		*s = Sanskrit
	case "sc":
		*s = Sardinian
	case "gd":
		*s = Scottish
	case "sr":
		*s = Serbian
	case "sn":
		*s = Shona
	case "sd":
		*s = Sindhi
	case "si":
		*s = Sinhala
	case "sk":
		*s = Slovak
	case "sl":
		*s = Slovene
	case "so":
		*s = Somali
	case "nr":
		*s = SouthernNdebele
	case "st":
		*s = SouthernSotho
	case "es":
		*s = Spanish
	case "su":
		*s = Sundanese
	case "sw":
		*s = Swahili
	case "ss":
		*s = Swati
	case "sv":
		*s = Swedish
	case "tl":
		*s = Tagalog
	case "ty":
		*s = Tahitian
	case "tg":
		*s = Tajik
	case "ta":
		*s = Tamil
	case "tt":
		*s = Tatar
	case "te":
		*s = Telugu
	case "th":
		*s = Thai
	case "bo":
		*s = Tibetan
	case "ti":
		*s = Tigrinya
	case "to":
		*s = Tonga
	case "ts":
		*s = Tsonga
	case "tn":
		*s = Tswana
	case "tr":
		*s = Turkish
	case "tk":
		*s = Turkmen
	case "tw":
		*s = Twi
	case "uk":
		*s = Ukrainian
	case "ur":
		*s = Urdu
	case "ug":
		*s = Uyghur
	case "uz":
		*s = Uzbek
	case "ve":
		*s = Venda
	case "vi":
		*s = Vietnamese
	case "vo":
		*s = Volapük
	case "wa":
		*s = Walloon
	case "cy":
		*s = Welsh
	case "fy":
		*s = Western
	case "wo":
		*s = Wolof
	case "xh":
		*s = Xhosa
	case "yi":
		*s = Yiddish
	case "yo":
		*s = Yoruba
	case "za":
		*s = Zhuang
	case "zu":
		*s = Zulu
	default:
		return ErrUnknownLanguage
	}
	return nil
}

var seq_bytes_Language = [...][]byte{[]byte(""), []byte("ab"), []byte("aa"), []byte("af"), []byte("ak"), []byte("sq"), []byte("am"), []byte("ar"), []byte("an"), []byte("hy"), []byte("as"), []byte("av"), []byte("ae"), []byte("ay"), []byte("az"), []byte("bm"), []byte("ba"), []byte("eu"), []byte("be"), []byte("bn"), []byte("bh"), []byte("bi"), []byte("bs"), []byte("br"), []byte("bg"), []byte("my"), []byte("ca"), []byte("ch"), []byte("ce"), []byte("ny"), []byte("zh"), []byte("zh_Hant"), []byte("cv"), []byte("kw"), []byte("co"), []byte("cr"), []byte("hr"), []byte("cs"), []byte("da"), []byte("dv"), []byte("nl"), []byte("dz"), []byte("en"), []byte("eo"), []byte("et"), []byte("ee"), []byte("fo"), []byte("fj"), []byte("fi"), []byte("fr"), []byte("ff"), []byte("gl"), []byte("lg"), []byte("ka"), []byte("de"), []byte("el"), []byte("gn"), []byte("gu"), []byte("ht"), []byte("ha"), []byte("he"), []byte("hz"), []byte("hi"), []byte("ho"), []byte("hu"), []byte("is"), []byte("io"), []byte("ig"), []byte("id"), []byte("ia"), []byte("ie"), []byte("iu"), []byte("ik"), []byte("ga"), []byte("it"), []byte("ja"), []byte("jv"), []byte("kl"), []byte("kn"), []byte("kr"), []byte("ks"), []byte("kk"), []byte("km"), []byte("ki"), []byte("rw"), []byte("rn"), []byte("kv"), []byte("kg"), []byte("ko"), []byte("ku"), []byte("kj"), []byte("ky"), []byte("lo"), []byte("la"), []byte("lv"), []byte("li"), []byte("ln"), []byte("lt"), []byte("lu"), []byte("lb"), []byte("mk"), []byte("mg"), []byte("ms"), []byte("ml"), []byte("mt"), []byte("gv"), []byte("mi"), []byte("mr"), []byte("mh"), []byte("mn"), []byte("na"), []byte("nv"), []byte("ng"), []byte("ne"), []byte("se"), []byte("nd"), []byte("no"), []byte("nb"), []byte("nn"), []byte("ii"), []byte("oc"), []byte("oj"), []byte("cu"), []byte("or"), []byte("om"), []byte("os"), []byte("pi"), []byte("pa"), []byte("ps"), []byte("fa"), []byte("pl"), []byte("pt"), []byte("qu"), []byte("ro"), []byte("rm"), []byte("ru"), []byte("sm"), []byte("sg"), []byte("sa"), []byte("sc"), []byte("gd"), []byte("sr"), []byte("sn"), []byte("sd"), []byte("si"), []byte("sk"), []byte("sl"), []byte("so"), []byte("nr"), []byte("st"), []byte("es"), []byte("su"), []byte("sw"), []byte("ss"), []byte("sv"), []byte("tl"), []byte("ty"), []byte("tg"), []byte("ta"), []byte("tt"), []byte("te"), []byte("th"), []byte("bo"), []byte("ti"), []byte("to"), []byte("ts"), []byte("tn"), []byte("tr"), []byte("tk"), []byte("tw"), []byte("uk"), []byte("ur"), []byte("ug"), []byte("uz"), []byte("ve"), []byte("vi"), []byte("vo"), []byte("wa"), []byte("cy"), []byte("fy"), []byte("wo"), []byte("xh"), []byte("yi"), []byte("yo"), []byte("za"), []byte("zu")}

func (s Language) MarshalText() ([]byte, error) { return s.AppendText(nil) }

func (s Language) AppendText(b []byte) ([]byte, error) {
	switch s {
	case Unknown:
		return append(b, seq_bytes_Language[0]...), nil
	case Abkhaz:
		return append(b, seq_bytes_Language[1]...), nil
	case Afar:
		return append(b, seq_bytes_Language[2]...), nil
	case Afrikaans:
		return append(b, seq_bytes_Language[3]...), nil
	case Akan:
		return append(b, seq_bytes_Language[4]...), nil
	case Albanian:
		return append(b, seq_bytes_Language[5]...), nil
	case Amharic:
		return append(b, seq_bytes_Language[6]...), nil
	case Arabic:
		return append(b, seq_bytes_Language[7]...), nil
	case Aragonese:
		return append(b, seq_bytes_Language[8]...), nil
	case Armenian:
		return append(b, seq_bytes_Language[9]...), nil
	case Assamese:
		return append(b, seq_bytes_Language[10]...), nil
	case Avaric:
		return append(b, seq_bytes_Language[11]...), nil
	case Avestan:
		return append(b, seq_bytes_Language[12]...), nil
	case Aymara:
		return append(b, seq_bytes_Language[13]...), nil
	case Azerbaijani:
		return append(b, seq_bytes_Language[14]...), nil
	case Bambara:
		return append(b, seq_bytes_Language[15]...), nil
	case Bashkir:
		return append(b, seq_bytes_Language[16]...), nil
	case Basque:
		return append(b, seq_bytes_Language[17]...), nil
	case Belarusian:
		return append(b, seq_bytes_Language[18]...), nil
	case Bengali:
		return append(b, seq_bytes_Language[19]...), nil
	case Bihari:
		return append(b, seq_bytes_Language[20]...), nil
	case Bislama:
		return append(b, seq_bytes_Language[21]...), nil
	case Bosnian:
		return append(b, seq_bytes_Language[22]...), nil
	case Breton:
		return append(b, seq_bytes_Language[23]...), nil
	case Bulgarian:
		return append(b, seq_bytes_Language[24]...), nil
	case Burmese:
		return append(b, seq_bytes_Language[25]...), nil
	case Catalan:
		return append(b, seq_bytes_Language[26]...), nil
	case Chamorro:
		return append(b, seq_bytes_Language[27]...), nil
	case Chechen:
		return append(b, seq_bytes_Language[28]...), nil
	case Chichewa:
		return append(b, seq_bytes_Language[29]...), nil
	case Chinese:
		return append(b, seq_bytes_Language[30]...), nil
	case ChineseTraditional:
		return append(b, seq_bytes_Language[31]...), nil
	case Chuvash:
		return append(b, seq_bytes_Language[32]...), nil
	case Cornish:
		return append(b, seq_bytes_Language[33]...), nil
	case Corsican:
		return append(b, seq_bytes_Language[34]...), nil
	case Cree:
		return append(b, seq_bytes_Language[35]...), nil
	case Croatian:
		return append(b, seq_bytes_Language[36]...), nil
	case Czech:
		return append(b, seq_bytes_Language[37]...), nil
	case Danish:
		return append(b, seq_bytes_Language[38]...), nil
	case Divehi:
		return append(b, seq_bytes_Language[39]...), nil
	case Dutch:
		return append(b, seq_bytes_Language[40]...), nil
	case Dzongkha:
		return append(b, seq_bytes_Language[41]...), nil
	case English:
		return append(b, seq_bytes_Language[42]...), nil
	case Esperanto:
		return append(b, seq_bytes_Language[43]...), nil
	case Estonian:
		return append(b, seq_bytes_Language[44]...), nil
	case Ewe:
		return append(b, seq_bytes_Language[45]...), nil
	case Faroese:
		return append(b, seq_bytes_Language[46]...), nil
	case Fijian:
		return append(b, seq_bytes_Language[47]...), nil
	case Finnish:
		return append(b, seq_bytes_Language[48]...), nil
	case French:
		return append(b, seq_bytes_Language[49]...), nil
	case Fula:
		return append(b, seq_bytes_Language[50]...), nil
	case Galician:
		return append(b, seq_bytes_Language[51]...), nil
	case Ganda:
		return append(b, seq_bytes_Language[52]...), nil
	case Georgian:
		return append(b, seq_bytes_Language[53]...), nil
	case German:
		return append(b, seq_bytes_Language[54]...), nil
	case Greek:
		return append(b, seq_bytes_Language[55]...), nil
	case Guaraní:
		return append(b, seq_bytes_Language[56]...), nil
	case Gujarati:
		return append(b, seq_bytes_Language[57]...), nil
	case Haitian:
		return append(b, seq_bytes_Language[58]...), nil
	case Hausa:
		return append(b, seq_bytes_Language[59]...), nil
	case Hebrew:
		return append(b, seq_bytes_Language[60]...), nil
	case Herero:
		return append(b, seq_bytes_Language[61]...), nil
	case Hindi:
		return append(b, seq_bytes_Language[62]...), nil
	case Hiri:
		return append(b, seq_bytes_Language[63]...), nil
	case Hungarian:
		return append(b, seq_bytes_Language[64]...), nil
	case Icelandic:
		return append(b, seq_bytes_Language[65]...), nil
	case Ido:
		return append(b, seq_bytes_Language[66]...), nil
	case Igbo:
		return append(b, seq_bytes_Language[67]...), nil
	case Indonesian:
		return append(b, seq_bytes_Language[68]...), nil
	case Interlingua:
		return append(b, seq_bytes_Language[69]...), nil
	case Interlingue:
		return append(b, seq_bytes_Language[70]...), nil
	case Inuktitut:
		return append(b, seq_bytes_Language[71]...), nil
	case Inupiaq:
		return append(b, seq_bytes_Language[72]...), nil
	case Irish:
		return append(b, seq_bytes_Language[73]...), nil
	case Italian:
		return append(b, seq_bytes_Language[74]...), nil
	case Japanese:
		return append(b, seq_bytes_Language[75]...), nil
	case Javanese:
		return append(b, seq_bytes_Language[76]...), nil
	case Kalaallisut:
		return append(b, seq_bytes_Language[77]...), nil
	case Kannada:
		return append(b, seq_bytes_Language[78]...), nil
	case Kanuri:
		return append(b, seq_bytes_Language[79]...), nil
	case Kashmiri:
		return append(b, seq_bytes_Language[80]...), nil
	case Kazakh:
		return append(b, seq_bytes_Language[81]...), nil
	case Khmer:
		return append(b, seq_bytes_Language[82]...), nil
	case Kikuyu:
		return append(b, seq_bytes_Language[83]...), nil
	case Kinyarwanda:
		return append(b, seq_bytes_Language[84]...), nil
	case Kirundi:
		return append(b, seq_bytes_Language[85]...), nil
	case Komi:
		return append(b, seq_bytes_Language[86]...), nil
	case Kongo:
		return append(b, seq_bytes_Language[87]...), nil
	case Korean:
		return append(b, seq_bytes_Language[88]...), nil
	case Kurdish:
		return append(b, seq_bytes_Language[89]...), nil
	case Kwanyama:
		return append(b, seq_bytes_Language[90]...), nil
	case Kyrgyz:
		return append(b, seq_bytes_Language[91]...), nil
	case Lao:
		return append(b, seq_bytes_Language[92]...), nil
	case Latin:
		return append(b, seq_bytes_Language[93]...), nil
	case Latvian:
		return append(b, seq_bytes_Language[94]...), nil
	case Limburgish:
		return append(b, seq_bytes_Language[95]...), nil
	case Lingala:
		return append(b, seq_bytes_Language[96]...), nil
	case Lithuanian:
		return append(b, seq_bytes_Language[97]...), nil
	case Luba:
		return append(b, seq_bytes_Language[98]...), nil
	case Luxembourgish:
		return append(b, seq_bytes_Language[99]...), nil
	case Macedonian:
		return append(b, seq_bytes_Language[100]...), nil
	case Malagasy:
		return append(b, seq_bytes_Language[101]...), nil
	case Malay:
		return append(b, seq_bytes_Language[102]...), nil
	case Malayalam:
		return append(b, seq_bytes_Language[103]...), nil
	case Maltese:
		return append(b, seq_bytes_Language[104]...), nil
	case Manx:
		return append(b, seq_bytes_Language[105]...), nil
	case Māori:
		return append(b, seq_bytes_Language[106]...), nil
	case Marathi:
		return append(b, seq_bytes_Language[107]...), nil
	case Marshallese:
		return append(b, seq_bytes_Language[108]...), nil
	case Mongolian:
		return append(b, seq_bytes_Language[109]...), nil
	case Nauru:
		return append(b, seq_bytes_Language[110]...), nil
	case Navajo:
		return append(b, seq_bytes_Language[111]...), nil
	case Ndonga:
		return append(b, seq_bytes_Language[112]...), nil
	case Nepali:
		return append(b, seq_bytes_Language[113]...), nil
	case Northern:
		return append(b, seq_bytes_Language[114]...), nil
	case NorthernNdebele:
		return append(b, seq_bytes_Language[115]...), nil
	case Norwegian:
		return append(b, seq_bytes_Language[116]...), nil
	case NorwegianBokmal:
		return append(b, seq_bytes_Language[117]...), nil
	case NorwegianNynorsk:
		return append(b, seq_bytes_Language[118]...), nil
	case Nuosu:
		return append(b, seq_bytes_Language[119]...), nil
	case Occitan:
		return append(b, seq_bytes_Language[120]...), nil
	case Ojibwe:
		return append(b, seq_bytes_Language[121]...), nil
	case Old:
		return append(b, seq_bytes_Language[122]...), nil
	case Oriya:
		return append(b, seq_bytes_Language[123]...), nil
	case Oromo:
		return append(b, seq_bytes_Language[124]...), nil
	case Ossetian:
		return append(b, seq_bytes_Language[125]...), nil
	case Pāli:
		return append(b, seq_bytes_Language[126]...), nil
	case Panjabi:
		return append(b, seq_bytes_Language[127]...), nil
	case Pashto:
		return append(b, seq_bytes_Language[128]...), nil
	case Persian:
		return append(b, seq_bytes_Language[129]...), nil
	case Polish:
		return append(b, seq_bytes_Language[130]...), nil
	case Portuguese:
		return append(b, seq_bytes_Language[131]...), nil
	case Quechua:
		return append(b, seq_bytes_Language[132]...), nil
	case Romanian:
		return append(b, seq_bytes_Language[133]...), nil
	case Romansh:
		return append(b, seq_bytes_Language[134]...), nil
	case Russian:
		return append(b, seq_bytes_Language[135]...), nil
	case Samoan:
		return append(b, seq_bytes_Language[136]...), nil
	case Sango:
		return append(b, seq_bytes_Language[137]...), nil
	case Sanskrit:
		return append(b, seq_bytes_Language[138]...), nil
	case Sardinian:
		return append(b, seq_bytes_Language[139]...), nil
	case Scottish:
		return append(b, seq_bytes_Language[140]...), nil
	case Serbian:
		return append(b, seq_bytes_Language[141]...), nil
	case Shona:
		return append(b, seq_bytes_Language[142]...), nil
	case Sindhi:
		return append(b, seq_bytes_Language[143]...), nil
	case Sinhala:
		return append(b, seq_bytes_Language[144]...), nil
	case Slovak:
		return append(b, seq_bytes_Language[145]...), nil
	case Slovene:
		return append(b, seq_bytes_Language[146]...), nil
	case Somali:
		return append(b, seq_bytes_Language[147]...), nil
	case SouthernNdebele:
		return append(b, seq_bytes_Language[148]...), nil
	case SouthernSotho:
		return append(b, seq_bytes_Language[149]...), nil
	case Spanish:
		return append(b, seq_bytes_Language[150]...), nil
	case Sundanese:
		return append(b, seq_bytes_Language[151]...), nil
	case Swahili:
		return append(b, seq_bytes_Language[152]...), nil
	case Swati:
		return append(b, seq_bytes_Language[153]...), nil
	case Swedish:
		return append(b, seq_bytes_Language[154]...), nil
	case Tagalog:
		return append(b, seq_bytes_Language[155]...), nil
	case Tahitian:
		return append(b, seq_bytes_Language[156]...), nil
	case Tajik:
		return append(b, seq_bytes_Language[157]...), nil
	case Tamil:
		return append(b, seq_bytes_Language[158]...), nil
	case Tatar:
		return append(b, seq_bytes_Language[159]...), nil
	case Telugu:
		return append(b, seq_bytes_Language[160]...), nil
	case Thai:
		return append(b, seq_bytes_Language[161]...), nil
	case Tibetan:
		return append(b, seq_bytes_Language[162]...), nil
	case Tigrinya:
		return append(b, seq_bytes_Language[163]...), nil
	case Tonga:
		return append(b, seq_bytes_Language[164]...), nil
	case Tsonga:
		return append(b, seq_bytes_Language[165]...), nil
	case Tswana:
		return append(b, seq_bytes_Language[166]...), nil
	case Turkish:
		return append(b, seq_bytes_Language[167]...), nil
	case Turkmen:
		return append(b, seq_bytes_Language[168]...), nil
	case Twi:
		return append(b, seq_bytes_Language[169]...), nil
	case Ukrainian:
		return append(b, seq_bytes_Language[170]...), nil
	case Urdu:
		return append(b, seq_bytes_Language[171]...), nil
	case Uyghur:
		return append(b, seq_bytes_Language[172]...), nil
	case Uzbek:
		return append(b, seq_bytes_Language[173]...), nil
	case Venda:
		return append(b, seq_bytes_Language[174]...), nil
	case Vietnamese:
		return append(b, seq_bytes_Language[175]...), nil
	case Volapük:
		return append(b, seq_bytes_Language[176]...), nil
	case Walloon:
		return append(b, seq_bytes_Language[177]...), nil
	case Welsh:
		return append(b, seq_bytes_Language[178]...), nil
	case Western:
		return append(b, seq_bytes_Language[179]...), nil
	case Wolof:
		return append(b, seq_bytes_Language[180]...), nil
	case Xhosa:
		return append(b, seq_bytes_Language[181]...), nil
	case Yiddish:
		return append(b, seq_bytes_Language[182]...), nil
	case Yoruba:
		return append(b, seq_bytes_Language[183]...), nil
	case Zhuang:
		return append(b, seq_bytes_Language[184]...), nil
	case Zulu:
		return append(b, seq_bytes_Language[185]...), nil
	default:
		return nil, ErrUnknownLanguage
	}
}

var seq_string_Language = [...]string{"", "ab", "aa", "af", "ak", "sq", "am", "ar", "an", "hy", "as", "av", "ae", "ay", "az", "bm", "ba", "eu", "be", "bn", "bh", "bi", "bs", "br", "bg", "my", "ca", "ch", "ce", "ny", "zh", "zh_Hant", "cv", "kw", "co", "cr", "hr", "cs", "da", "dv", "nl", "dz", "en", "eo", "et", "ee", "fo", "fj", "fi", "fr", "ff", "gl", "lg", "ka", "de", "el", "gn", "gu", "ht", "ha", "he", "hz", "hi", "ho", "hu", "is", "io", "ig", "id", "ia", "ie", "iu", "ik", "ga", "it", "ja", "jv", "kl", "kn", "kr", "ks", "kk", "km", "ki", "rw", "rn", "kv", "kg", "ko", "ku", "kj", "ky", "lo", "la", "lv", "li", "ln", "lt", "lu", "lb", "mk", "mg", "ms", "ml", "mt", "gv", "mi", "mr", "mh", "mn", "na", "nv", "ng", "ne", "se", "nd", "no", "nb", "nn", "ii", "oc", "oj", "cu", "or", "om", "os", "pi", "pa", "ps", "fa", "pl", "pt", "qu", "ro", "rm", "ru", "sm", "sg", "sa", "sc", "gd", "sr", "sn", "sd", "si", "sk", "sl", "so", "nr", "st", "es", "su", "sw", "ss", "sv", "tl", "ty", "tg", "ta", "tt", "te", "th", "bo", "ti", "to", "ts", "tn", "tr", "tk", "tw", "uk", "ur", "ug", "uz", "ve", "vi", "vo", "wa", "cy", "fy", "wo", "xh", "yi", "yo", "za", "zu"}

func (s Language) String() string {
	switch s {
	case Unknown:
		return seq_string_Language[0]
	case Abkhaz:
		return seq_string_Language[1]
	case Afar:
		return seq_string_Language[2]
	case Afrikaans:
		return seq_string_Language[3]
	case Akan:
		return seq_string_Language[4]
	case Albanian:
		return seq_string_Language[5]
	case Amharic:
		return seq_string_Language[6]
	case Arabic:
		return seq_string_Language[7]
	case Aragonese:
		return seq_string_Language[8]
	case Armenian:
		return seq_string_Language[9]
	case Assamese:
		return seq_string_Language[10]
	case Avaric:
		return seq_string_Language[11]
	case Avestan:
		return seq_string_Language[12]
	case Aymara:
		return seq_string_Language[13]
	case Azerbaijani:
		return seq_string_Language[14]
	case Bambara:
		return seq_string_Language[15]
	case Bashkir:
		return seq_string_Language[16]
	case Basque:
		return seq_string_Language[17]
	case Belarusian:
		return seq_string_Language[18]
	case Bengali:
		return seq_string_Language[19]
	case Bihari:
		return seq_string_Language[20]
	case Bislama:
		return seq_string_Language[21]
	case Bosnian:
		return seq_string_Language[22]
	case Breton:
		return seq_string_Language[23]
	case Bulgarian:
		return seq_string_Language[24]
	case Burmese:
		return seq_string_Language[25]
	case Catalan:
		return seq_string_Language[26]
	case Chamorro:
		return seq_string_Language[27]
	case Chechen:
		return seq_string_Language[28]
	case Chichewa:
		return seq_string_Language[29]
	case Chinese:
		return seq_string_Language[30]
	case ChineseTraditional:
		return seq_string_Language[31]
	case Chuvash:
		return seq_string_Language[32]
	case Cornish:
		return seq_string_Language[33]
	case Corsican:
		return seq_string_Language[34]
	case Cree:
		return seq_string_Language[35]
	case Croatian:
		return seq_string_Language[36]
	case Czech:
		return seq_string_Language[37]
	case Danish:
		return seq_string_Language[38]
	case Divehi:
		return seq_string_Language[39]
	case Dutch:
		return seq_string_Language[40]
	case Dzongkha:
		return seq_string_Language[41]
	case English:
		return seq_string_Language[42]
	case Esperanto:
		return seq_string_Language[43]
	case Estonian:
		return seq_string_Language[44]
	case Ewe:
		return seq_string_Language[45]
	case Faroese:
		return seq_string_Language[46]
	case Fijian:
		return seq_string_Language[47]
	case Finnish:
		return seq_string_Language[48]
	case French:
		return seq_string_Language[49]
	case Fula:
		return seq_string_Language[50]
	case Galician:
		return seq_string_Language[51]
	case Ganda:
		return seq_string_Language[52]
	case Georgian:
		return seq_string_Language[53]
	case German:
		return seq_string_Language[54]
	case Greek:
		return seq_string_Language[55]
	case Guaraní:
		return seq_string_Language[56]
	case Gujarati:
		return seq_string_Language[57]
	case Haitian:
		return seq_string_Language[58]
	case Hausa:
		return seq_string_Language[59]
	case Hebrew:
		return seq_string_Language[60]
	case Herero:
		return seq_string_Language[61]
	case Hindi:
		return seq_string_Language[62]
	case Hiri:
		return seq_string_Language[63]
	case Hungarian:
		return seq_string_Language[64]
	case Icelandic:
		return seq_string_Language[65]
	case Ido:
		return seq_string_Language[66]
	case Igbo:
		return seq_string_Language[67]
	case Indonesian:
		return seq_string_Language[68]
	case Interlingua:
		return seq_string_Language[69]
	case Interlingue:
		return seq_string_Language[70]
	case Inuktitut:
		return seq_string_Language[71]
	case Inupiaq:
		return seq_string_Language[72]
	case Irish:
		return seq_string_Language[73]
	case Italian:
		return seq_string_Language[74]
	case Japanese:
		return seq_string_Language[75]
	case Javanese:
		return seq_string_Language[76]
	case Kalaallisut:
		return seq_string_Language[77]
	case Kannada:
		return seq_string_Language[78]
	case Kanuri:
		return seq_string_Language[79]
	case Kashmiri:
		return seq_string_Language[80]
	case Kazakh:
		return seq_string_Language[81]
	case Khmer:
		return seq_string_Language[82]
	case Kikuyu:
		return seq_string_Language[83]
	case Kinyarwanda:
		return seq_string_Language[84]
	case Kirundi:
		return seq_string_Language[85]
	case Komi:
		return seq_string_Language[86]
	case Kongo:
		return seq_string_Language[87]
	case Korean:
		return seq_string_Language[88]
	case Kurdish:
		return seq_string_Language[89]
	case Kwanyama:
		return seq_string_Language[90]
	case Kyrgyz:
		return seq_string_Language[91]
	case Lao:
		return seq_string_Language[92]
	case Latin:
		return seq_string_Language[93]
	case Latvian:
		return seq_string_Language[94]
	case Limburgish:
		return seq_string_Language[95]
	case Lingala:
		return seq_string_Language[96]
	case Lithuanian:
		return seq_string_Language[97]
	case Luba:
		return seq_string_Language[98]
	case Luxembourgish:
		return seq_string_Language[99]
	case Macedonian:
		return seq_string_Language[100]
	case Malagasy:
		return seq_string_Language[101]
	case Malay:
		return seq_string_Language[102]
	case Malayalam:
		return seq_string_Language[103]
	case Maltese:
		return seq_string_Language[104]
	case Manx:
		return seq_string_Language[105]
	case Māori:
		return seq_string_Language[106]
	case Marathi:
		return seq_string_Language[107]
	case Marshallese:
		return seq_string_Language[108]
	case Mongolian:
		return seq_string_Language[109]
	case Nauru:
		return seq_string_Language[110]
	case Navajo:
		return seq_string_Language[111]
	case Ndonga:
		return seq_string_Language[112]
	case Nepali:
		return seq_string_Language[113]
	case Northern:
		return seq_string_Language[114]
	case NorthernNdebele:
		return seq_string_Language[115]
	case Norwegian:
		return seq_string_Language[116]
	case NorwegianBokmal:
		return seq_string_Language[117]
	case NorwegianNynorsk:
		return seq_string_Language[118]
	case Nuosu:
		return seq_string_Language[119]
	case Occitan:
		return seq_string_Language[120]
	case Ojibwe:
		return seq_string_Language[121]
	case Old:
		return seq_string_Language[122]
	case Oriya:
		return seq_string_Language[123]
	case Oromo:
		return seq_string_Language[124]
	case Ossetian:
		return seq_string_Language[125]
	case Pāli:
		return seq_string_Language[126]
	case Panjabi:
		return seq_string_Language[127]
	case Pashto:
		return seq_string_Language[128]
	case Persian:
		return seq_string_Language[129]
	case Polish:
		return seq_string_Language[130]
	case Portuguese:
		return seq_string_Language[131]
	case Quechua:
		return seq_string_Language[132]
	case Romanian:
		return seq_string_Language[133]
	case Romansh:
		return seq_string_Language[134]
	case Russian:
		return seq_string_Language[135]
	case Samoan:
		return seq_string_Language[136]
	case Sango:
		return seq_string_Language[137]
	case Sanskrit:
		return seq_string_Language[138]
	case Sardinian:
		return seq_string_Language[139]
	case Scottish:
		return seq_string_Language[140]
	case Serbian:
		return seq_string_Language[141]
	case Shona:
		return seq_string_Language[142]
	case Sindhi:
		return seq_string_Language[143]
	case Sinhala:
		return seq_string_Language[144]
	case Slovak:
		return seq_string_Language[145]
	case Slovene:
		return seq_string_Language[146]
	case Somali:
		return seq_string_Language[147]
	case SouthernNdebele:
		return seq_string_Language[148]
	case SouthernSotho:
		return seq_string_Language[149]
	case Spanish:
		return seq_string_Language[150]
	case Sundanese:
		return seq_string_Language[151]
	case Swahili:
		return seq_string_Language[152]
	case Swati:
		return seq_string_Language[153]
	case Swedish:
		return seq_string_Language[154]
	case Tagalog:
		return seq_string_Language[155]
	case Tahitian:
		return seq_string_Language[156]
	case Tajik:
		return seq_string_Language[157]
	case Tamil:
		return seq_string_Language[158]
	case Tatar:
		return seq_string_Language[159]
	case Telugu:
		return seq_string_Language[160]
	case Thai:
		return seq_string_Language[161]
	case Tibetan:
		return seq_string_Language[162]
	case Tigrinya:
		return seq_string_Language[163]
	case Tonga:
		return seq_string_Language[164]
	case Tsonga:
		return seq_string_Language[165]
	case Tswana:
		return seq_string_Language[166]
	case Turkish:
		return seq_string_Language[167]
	case Turkmen:
		return seq_string_Language[168]
	case Twi:
		return seq_string_Language[169]
	case Ukrainian:
		return seq_string_Language[170]
	case Urdu:
		return seq_string_Language[171]
	case Uyghur:
		return seq_string_Language[172]
	case Uzbek:
		return seq_string_Language[173]
	case Venda:
		return seq_string_Language[174]
	case Vietnamese:
		return seq_string_Language[175]
	case Volapük:
		return seq_string_Language[176]
	case Walloon:
		return seq_string_Language[177]
	case Welsh:
		return seq_string_Language[178]
	case Western:
		return seq_string_Language[179]
	case Wolof:
		return seq_string_Language[180]
	case Xhosa:
		return seq_string_Language[181]
	case Yiddish:
		return seq_string_Language[182]
	case Yoruba:
		return seq_string_Language[183]
	case Zhuang:
		return seq_string_Language[184]
	case Zulu:
		return seq_string_Language[185]
	default:
		return ""
	}
}
